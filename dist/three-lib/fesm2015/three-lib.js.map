{"version":3,"file":"three-lib.js.map","sources":["ng://three-lib/lib/three-lib.service.ts","ng://three-lib/lib/objects/abstract-object-3d.ts","ng://three-lib/lib/objects/scene.directive.ts","ng://three-lib/lib/cameras/abstract-camera.ts","ng://three-lib/lib/renderer/webgl-renderer.component.ts","ng://three-lib/lib/controls/orbit-controls.directive.ts","ng://three-lib/lib/objects/loaders/abstract-model-loader.ts","ng://three-lib/lib/objects/loaders/collada-loader.directive.ts","ng://three-lib/lib/objects/loaders/obj-loader.directive.ts","ng://three-lib/lib/pipes/rad2deg.pipe.ts","ng://three-lib/lib/pipes/deg2rad.pipe.ts","ng://three-lib/lib/cameras/perspective-camera.directive.ts","ng://three-lib/lib/objects/helpers/axes-helper.directive.ts","ng://three-lib/lib/objects/helpers/grid-helper.directive.ts","ng://three-lib/lib/objects/loaders/object-loader.directive.ts","ng://three-lib/lib/objects/light/point-light.directive.ts","ng://three-lib/lib/three-test/three-test.component.ts","ng://three-lib/lib/three-lib.module.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ThreeLibService {\n\n  constructor() { }\n}\n","import {\n  AfterViewInit,\n  ContentChildren,\n  Input,\n  OnChanges,\n  QueryList,\n  SimpleChanges\n} from '@angular/core';\nimport * as THREE from 'three-full';\n\nexport abstract class AbstractObject3D<T extends THREE.Object3D> implements AfterViewInit, OnChanges {\n\n  @ContentChildren(AbstractObject3D, { descendants: false }) childNodes: QueryList<AbstractObject3D<THREE.Object3D>>;\n\n  /**\n   * Rotation in Euler angles (radians) with order X, Y, Z.\n   */\n  @Input() rotateX: number;\n\n  /**\n   * Rotation in Euler angles (radians) with order X, Y, Z.\n   */\n  @Input() rotateY: number;\n\n  /**\n   * Rotation in Euler angles (radians) with order X, Y, Z.\n   */\n  @Input() rotateZ: number;\n\n  @Input() translateX: number;\n  @Input() translateY: number;\n  @Input() translateZ: number;\n\n  private object: T;\n\n  protected rerender() {\n  }\n\n  public ngOnChanges(changes: SimpleChanges) {\n    if (!this.object) {\n      return;\n    }\n\n    let mustRerender = false;\n\n    if (['rotateX', 'rotateY', 'rotateZ'].some(propName => propName in changes)) {\n      this.applyRotation();\n      mustRerender = true;\n    }\n    if (['translateX', 'translateY', 'translateZ'].some(propName => propName in changes)) {\n      this.applyTranslation();\n      mustRerender = true;\n    }\n\n    if (mustRerender) {\n      this.rerender();\n    }\n  }\n\n  public ngAfterViewInit(): void {\n    console.log('AbstractObject3D.ngAfterViewInit');\n    this.object = this.newObject3DInstance();\n\n    this.applyTranslation();\n    this.applyRotation();\n\n    if (this.childNodes !== undefined && this.childNodes.length > 1) {\n      this.childNodes.filter(i => i !== this && i.getObject() !== undefined).forEach(i => {\n        // console.log(\"Add child for \" + this.constructor.name);\n        // console.log(i);\n        this.addChild(i.getObject());\n      });\n    } else {\n      // console.log(\"No child Object3D for: \" + this.constructor.name);\n    }\n\n    this.afterInit();\n  }\n\n  private applyRotation(): void {\n    const angles = [\n      this.rotateX,\n      this.rotateY,\n      this.rotateZ\n    ].map(angle => angle || 0);\n\n    this.object.rotation.set(\n      this.rotateX || 0,\n      this.rotateY || 0,\n      this.rotateZ || 0,\n      'XYZ'\n    );\n  }\n\n  private applyTranslation(): void {\n    this.object.position.set(\n      this.translateX || 0,\n      this.translateY || 0,\n      this.translateZ || 0\n    );\n  }\n\n  protected addChild(object: THREE.Object3D): void {\n    this.object.add(object);\n  }\n\n  protected removeChild(object: THREE.Object3D): void {\n    this.object.remove(object);\n  }\n\n  public getObject(): T {\n    return this.object;\n  }\n\n  protected abstract newObject3DInstance(): T;\n\n  protected abstract afterInit(): void;\n\n}\n","import { Directive, AfterViewInit, Input, forwardRef } from '@angular/core';\nimport * as THREE from 'three-full';\nimport { AbstractObject3D } from './abstract-object-3d';\n\n@Directive({\n  selector: 'three-scene',\n  providers: [{ provide: AbstractObject3D, useExisting: forwardRef(() => SceneDirective) }]\n})\nexport class SceneDirective extends AbstractObject3D<THREE.Scene> {\n\n  constructor() {\n    console.log('SceneDirective.constructor');\n    super();\n  }\n\n  protected afterInit(): void {\n    console.log('SceneDirective.afterInit');\n  }\n\n  protected newObject3DInstance(): THREE.Scene {\n    console.log('SceneDirective.newObject3DInstance');\n    return new THREE.Scene();\n  }\n\n}\n","import { AfterViewInit, Input, QueryList, ContentChildren } from '@angular/core';\nimport * as THREE from 'three-full';\n\nexport abstract class AbstractCamera<T extends THREE.Camera> implements AfterViewInit {\n\n  camera: T;\n\n  constructor() {\n    console.log('AbstractCamera.constructor');\n  }\n\n  public ngAfterViewInit(): void {\n    console.log('AbstractCamera.ngAfterViewInit');\n    this.afterInit();\n  }\n\n  protected abstract afterInit(): void;\n\n  public abstract updateAspectRatio(aspect: number);\n\n}\n","import {\n  Component,\n  OnInit,\n  ViewChild,\n  ElementRef,\n  ContentChildren,\n  HostListener,\n  QueryList,\n  EventEmitter,\n  Output,\n  AfterViewInit\n} from '@angular/core';\nimport * as THREE from 'three-full';\nimport { SceneDirective } from '../objects/scene.directive';\nimport { AbstractCamera } from '../cameras/abstract-camera';\n\n\n@Component({\n  selector: 'three-webgl-renderer',\n  templateUrl: './webgl-renderer.component.html',\n  styleUrls: ['./webgl-renderer.component.scss']\n})\nexport class WebGLRendererComponent implements AfterViewInit {\n\n  private renderer: THREE.WebGLRenderer;\n  private viewInitialized = false;\n\n  @ViewChild('canvas')\n  private canvasRef: ElementRef; // NOTE: say bye-bye to server-side rendering ;)\n\n  @ContentChildren(SceneDirective) sceneComponents: QueryList<SceneDirective>; // TODO: Multiple scenes\n  @ContentChildren(AbstractCamera) cameraComponents: QueryList<AbstractCamera<THREE.Camera>>; // TODO: Multiple cameras\n\n  constructor() {\n    console.log('RendererComponent.constructor');\n    this.render = this.render.bind(this);\n  }\n\n  ngAfterViewInit() {\n    console.log('RendererComponent.ngAfterViewInit');\n    this.viewInitialized = true;\n    this.startRendering();\n  }\n\n  /**\n   * The render pane on which the scene is rendered.\n   * Currently, only the WebGL renderer with a canvas is used in this\n   * implementation, so this property will always be an ElementRef to the\n   * underlying <canvas> element.\n   *\n   * @example This property can be used to restrict the orbit controls (i.e. the\n   * area which is listened for mouse move and zoom events) to the rendering pane:\n   * ```\n   * <three-orbit-controls [rotateSpeed]=1 [zoomSpeed]=1.2 [listeningControlElement]=mainRenderer.renderPane>\n   *   <three-renderer #mainRenderer>\n   *     ...\n   *   </three-renderer>\n   * </three-orbit-controls>\n   * ```\n   */\n  public get renderPane(): ElementRef {\n    return this.canvasRef;\n  }\n\n  private get canvas(): HTMLCanvasElement {\n    return this.canvasRef.nativeElement;\n  }\n\n  private startRendering() {\n    console.log('RendererComponent.startRendering');\n    this.renderer = new THREE.WebGLRenderer({\n      canvas: this.canvas,\n      antialias: true\n    });\n    this.renderer.setPixelRatio(window.devicePixelRatio);\n    this.renderer.setSize(this.canvas.clientWidth, this.canvas.clientHeight);\n\n    this.renderer.shadowMap.enabled = true;\n    this.renderer.shadowMap.type = THREE.PCFSoftShadowMap;\n    this.renderer.setClearColor(0xffffff, 1);\n    this.renderer.autoClear = true;\n\n    this.updateChildCamerasAspectRatio();\n    this.render();\n  }\n\n  public render() {\n    // if (this.sceneComponents != undefined && this.sceneComponents.length == 1 &&\n    //     this.cameraComponents != undefined && this.cameraComponents.length == 1) {\n    if (this.viewInitialized) {\n      const sceneComponent = this.sceneComponents.first;\n      const cameraComponent = this.cameraComponents.first;\n      // console.log(\"render\");\n      // console.log(scene.getObject());\n      // console.log(camera.camera);\n      this.renderer.render(sceneComponent.getObject(), cameraComponent.camera);\n    }\n    // }\n  }\n\n  private calculateAspectRatio(): number {\n    const height = this.canvas.clientHeight;\n    if (height === 0) {\n      return 0;\n    }\n    return this.canvas.clientWidth / this.canvas.clientHeight;\n  }\n\n  @HostListener('window:resize', ['$event'])\n  public onResize(event: Event) {\n    this.canvas.style.width = '100%';\n    this.canvas.style.height = '100%';\n    console.log('RendererComponent.onResize: ' + this.canvas.clientWidth + ', ' + this.canvas.clientHeight);\n\n    this.updateChildCamerasAspectRatio();\n\n    this.renderer.setSize(this.canvas.clientWidth, this.canvas.clientHeight);\n    this.render();\n  }\n\n  public updateChildCamerasAspectRatio() {\n    const aspect = this.calculateAspectRatio();\n    this.cameraComponents.forEach(camera => camera.updateAspectRatio(aspect));\n  }\n\n  /*\n  @HostListener('document:keypress', ['$event'])\n  public onKeyPress(event: KeyboardEvent) {\n    console.log(\"onKeyPress: \" + event.key);\n  }\n*/\n\n}\n","import { AfterViewInit, ContentChildren, Directive, ElementRef, Input, OnChanges,\n   OnDestroy, SimpleChanges, QueryList } from '@angular/core';\nimport * as THREE from 'three-full';\nimport { OrbitControls } from '@avatsaev/three-orbitcontrols-ts';\nimport { WebGLRendererComponent } from '../renderer/webgl-renderer.component';\nimport { AbstractCamera } from '../cameras/abstract-camera';\n\n@Directive({\n  selector: 'three-orbit-controls'\n})\nexport class OrbitControlsDirective implements AfterViewInit, OnChanges, OnDestroy {\n\n  @ContentChildren(AbstractCamera, { descendants: true }) childCameras: QueryList<AbstractCamera<THREE.Camera>>;\n  @ContentChildren(WebGLRendererComponent, { descendants: true }) childRenderers: QueryList<WebGLRendererComponent>;\n  /**\n   * The element on whose native element the orbit controls will listen for mouse events.\n   *\n   * Note that keyboard events are still listened for on the global window object, this is\n   * a known issue from Three.js: https://github.com/mrdoob/three.js/pull/10315\n   *\n   * @example This property can be used to restrict the orbit controls (i.e. the\n   * area which is listened for mouse move and zoom events) to the rendering pane:\n   * ```\n   * <three-orbit-controls [listeningControlElement]=mainRenderer.renderPane>\n   *   <three-renderer #mainRenderer>\n   *     ...\n   *   </three-renderer>\n   * </three-orbit-controls>\n   * ```\n   */\n  @Input() listeningControlElement: ElementRef | undefined = undefined;\n\n  @Input() rotateSpeed = 1.0;\n  @Input() zoomSpeed = 1.2;\n\n  // private controls: THREE.OrbitControls;\n  private controls: OrbitControls;\n\n  constructor() {\n    console.log('OrbitControlsDirective.constructor');\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    // If the THREE.js OrbitControls are not set up yet, we do not need to update\n    // anything as they will pick the new values from the @Input properties automatically\n    // upon creation.\n    if (!this.controls) {\n      return;\n    }\n\n    if (changes['rotateSpeed']) {\n      this.controls.rotateSpeed = this.rotateSpeed;\n    }\n    if (changes['zoomSpeed']) {\n      this.controls.zoomSpeed = this.zoomSpeed;\n    }\n    if (changes['listeningControlElement']) {\n      // The DOM element the OrbitControls listen on cannot be changed once an\n      // OrbitControls object is created. We thus need to recreate it.\n      this.controls.dispose();\n      this.setUpOrbitControls();\n    }\n  }\n\n  ngOnDestroy() {\n    this.controls.dispose();\n  }\n\n  private setUpOrbitControls() {\n    // this.controls = new THREE.OrbitControls(\n    this.controls = new OrbitControls(\n        this.childCameras.first.camera,\n      this.listeningControlElement && this.listeningControlElement.nativeElement\n    );\n    this.controls.rotateSpeed = this.rotateSpeed;\n    this.controls.zoomSpeed = this.zoomSpeed;\n    this.controls.addEventListener('change', this.childRenderers.first.render);\n    this.childRenderers.first.render();\n  }\n\n  ngAfterViewInit(): void {\n    console.log('OrbitControlsDirective.ngAfterViewInit');\n    if (this.childCameras === undefined || this.childCameras.first === undefined) {\n      throw new Error('Camera is not found');\n    }\n    if (this.childRenderers === undefined || this.childRenderers.first === undefined) {\n      throw new Error('Renderer is not found');\n    }\n\n    this.setUpOrbitControls();\n  }\n\n}\n","import { AfterViewInit, forwardRef, Input, OnDestroy } from '@angular/core';\nimport { AbstractObject3D } from '../abstract-object-3d';\nimport { WebGLRendererComponent } from '../../renderer/webgl-renderer.component';\nimport * as THREE from 'three-full';\n\n/**\n * Helper parent class for model loader directives.\n *\n * @see ObjectLoaderDirective\n * @see ObjLoaderDirective\n * @see ColladaLoaderDirective\n */\nexport abstract class AbstractModelLoader extends AbstractObject3D<THREE.Object3D> implements OnDestroy {\n\n  private _model: string;\n  private _renderer: WebGLRendererComponent;\n\n  /**\n   * Flag to signal whether the parent class instance AbstractObject3D called the\n   * overwritten method {@link ModelLoaderDirective#afterInit} yet.\n   *\n   * Unless that method was called, no methods and properties of {@link AbstractObject3D}\n   * may be safely accessed, especially {@link AbstractObject3D#addChild} and\n   * {@link AbstractObject3D.renderer}.\n   */\n  private parentInitialized = false;\n\n  protected currentLoadedModelObject: THREE.Object3D | undefined;\n\n  /**\n   * Load the model object.\n   *\n   * Some loaders (e.g. ColladaLoader) also provide other model information\n   * upon loading besides the \"raw\" model object/scene. In these cases\n   * implementing child classes are indeed supposed to return the \"raw\" model\n   * object.\n   * The data source (usually a URI, although child classes are free to implement\n   * other means as well) from which the model shall be loaded can be obtained by\n   * {@link ModelLoaderDirective.model}.\n   */\n  protected abstract async loadModelObject(): Promise<THREE.Object3D>;\n\n  /**\n   * The model data source (usually a URI).\n   * Settings this property only hides the previous model upon successful\n   * loading of the new one. This especially means that if the new data source\n   * is invalid, the old model will *not* be removed from the scene.\n   */\n  @Input()\n  public set model(newModelUrl: string) {\n    this._model = newModelUrl;\n\n    // Delay model loading until the parent has been initialized,\n    // so that we can call addChild().\n    if (!this.parentInitialized) {\n      return;\n    }\n\n    this.loadModelObject().then(newModel => {\n      if (this.currentLoadedModelObject) {\n        this.removeChild(this.currentLoadedModelObject);\n      }\n\n      this.currentLoadedModelObject = newModel;\n      this.addChild(newModel);\n\n      if (this.renderer) {\n        this.renderer.render();\n      }\n    }).catch(err => {\n      console.error(err);\n    });\n  }\n\n  /**\n   * The current model data source (usually a URI).\n   */\n  public get model() {\n    return this._model;\n  }\n\n  @Input()\n  public set renderer(newRenderer: WebGLRendererComponent) {\n    this._renderer = newRenderer;\n    this._renderer.render();\n  }\n\n  public get renderer() {\n    return this._renderer;\n  }\n\n  protected afterInit() {\n    this.parentInitialized = true;\n\n    // Trigger model acquisition now that the parent has been initialized.\n    this.model = this.model;\n  }\n\n  ngOnDestroy(): void {\n    if (this.currentLoadedModelObject) {\n      this.removeChild(this.currentLoadedModelObject);\n    }\n  }\n\n  protected rerender() {\n    super.rerender();\n\n    if (this.renderer) {\n      this.renderer.render();\n    }\n  }\n\n  protected newObject3DInstance(): THREE.Object3D {\n    return new THREE.Object3D();\n  }\n}\n","import { Directive, forwardRef } from '@angular/core';\nimport * as THREE from 'three-full';\nimport { AbstractModelLoader } from './abstract-model-loader';\nimport { AbstractObject3D } from '../abstract-object-3d';\n\n@Directive({\n  selector: 'three-collada-loader',\n  providers: [{ provide: AbstractObject3D, useExisting: forwardRef(() => ColladaLoaderDirective) }]\n})\nexport class ColladaLoaderDirective extends AbstractModelLoader {\n  private loader = new THREE.ColladaLoader();\n\n  protected async loadModelObject() {\n    return new Promise<THREE.Object3D>((resolve, reject) => {\n      this.loader.load(this.model, model => {\n          resolve(model.scene);\n        },\n        undefined,\n        reject\n      );\n    });\n  }\n}\n","import { Directive, forwardRef, Input } from '@angular/core';\nimport * as THREE from 'three-full';\nimport { AbstractObject3D } from '../abstract-object-3d';\nimport { AbstractModelLoader } from './abstract-model-loader';\n\n/**\n * Directive for employing THREE.OBJLoader to load [Wavefront *.obj files][1].\n *\n * [1]: https://en.wikipedia.org/wiki/Wavefront_.obj_file\n */\n@Directive({\n  selector: 'three-obj-loader',\n  providers: [{ provide: AbstractObject3D, useExisting: forwardRef(() => ObjLoaderDirective) }]\n})\nexport class ObjLoaderDirective extends AbstractModelLoader {\n  private loader = new THREE.OBJLoader();\n  private mtlLoader = new THREE.MTLLoader();\n\n  @Input()\n  material: string;\n\n  @Input()\n  texturePath: string;\n\n  protected async loadModelObject() {\n    // TODO: make it nicer\n    if (this.material === undefined) {\n      return new Promise<THREE.Object3D>((resolve, reject) => {\n        this.loader.load(this.model, model => {\n          resolve(model);\n        },\n          undefined,\n          reject\n        );\n      });\n    } else {\n      return new Promise<THREE.Object3D>((resolve, reject) => {\n        if (this.texturePath !== undefined) {\n          this.mtlLoader.setTexturePath(this.texturePath);\n        }\n        this.mtlLoader.load(this.material, material => {\n          material.preload();\n          this.loader.setMaterials(material);\n          this.loader.load(this.model, model => {\n            resolve(model);\n          },\n            undefined,\n            reject\n          );\n        });\n      });\n    }\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'rad2deg'\n})\nexport class Rad2DegPipe implements PipeTransform {\n\n  /**\n   * Converts radians to degrees\n   * @param radians Radians\n   */\n  transform(radians: number): number {\n    return radians * (180 / Math.PI);\n  }\n\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'deg2rad'\n})\nexport class Deg2RadPipe implements PipeTransform {\n\n  /**\n   * Converts degrees to radians\n   * @param degree Degrees\n   */\n  transform(degrees: number): number {\n    return (degrees / 180) * Math.PI;\n  }\n\n}\n","import { Directive, Input, forwardRef, HostListener } from '@angular/core';\nimport { AbstractCamera } from './abstract-camera';\nimport * as THREE from 'three-full';\n\n@Directive({\n  selector: 'three-perspective-camera',\n  providers: [{ provide: AbstractCamera, useExisting: forwardRef(() => PerspectiveCameraDirective) }]\n})\nexport class PerspectiveCameraDirective extends AbstractCamera<THREE.PerspectiveCamera> {\n\n  // @Input() cameraTarget: THREE.Object3D;\n\n  @Input() fov: number;\n  @Input() near: number;\n  @Input() far: number;\n\n  @Input() positionX: number;\n  @Input() positionY: number;\n  @Input() positionZ: number;\n\n\n  constructor() {\n    console.log('PerspectiveCameraDirective.constructor');\n    super();\n  }\n\n  protected afterInit(): void {\n    console.log('PerspectiveCameraDirective.afterInit');\n    // let aspectRatio = undefined; // Updated later\n    this.camera = new THREE.PerspectiveCamera(\n      this.fov,\n      undefined,\n      this.near,\n      this.far\n    );\n\n    // Set position and look at\n    this.camera.position.x = this.positionX;\n    this.camera.position.y = this.positionY;\n    this.camera.position.z = this.positionZ;\n    this.camera.updateProjectionMatrix();\n  }\n\n  public updateAspectRatio(aspect: number) {\n    console.log('PerspectiveCameraDirective.updateAspectRatio: ' + aspect);\n    this.camera.aspect = aspect;\n    this.camera.updateProjectionMatrix();\n  }\n\n\n}\n","import { Directive, Input, AfterViewInit, forwardRef } from '@angular/core';\nimport * as THREE from 'three-full';\nimport { AbstractObject3D } from '../abstract-object-3d';\n\n@Directive({\n  selector: 'three-axes-helper',\n  providers: [{ provide: AbstractObject3D, useExisting: forwardRef(() => AxesHelperDirective) }]\n})\nexport class AxesHelperDirective extends AbstractObject3D<THREE.AxesHelper> {\n\n  @Input() size: number;\n\n  constructor() {\n    super();\n    console.log('AxesHelperDirective.constructor');\n  }\n\n  protected newObject3DInstance(): THREE.AxesHelper {\n    console.log('AxesHelperDirective.newObject3DInstance');\n    return new THREE.AxesHelper(this.size);\n  }\n\n  protected afterInit(): void {\n    console.log('AxesHelperDirective.afterInit');\n    // none\n  }\n\n}\n","import { Directive, Input, AfterViewInit, forwardRef } from '@angular/core';\nimport * as THREE from 'three-full';\nimport { AbstractObject3D } from '../abstract-object-3d';\n\n@Directive({\n  selector: 'three-grid-helper',\n  providers: [{ provide: AbstractObject3D, useExisting: forwardRef(() => GridHelperDirective) }]\n})\nexport class GridHelperDirective extends AbstractObject3D<THREE.AxesHelper> {\n\n  @Input() size: number;\n  @Input() divisions: number;\n\n  constructor() {\n    super();\n    console.log('GridHelperDirective.constructor');\n  }\n\n  protected newObject3DInstance(): THREE.AxesHelper {\n    console.log('GridHelperDirective.newObject3DInstance');\n    return new THREE.GridHelper(this.size, this.divisions);\n  }\n\n  protected afterInit(): void {\n    console.log('GridHelperDirective.afterInit');\n    // none\n  }\n\n}\n","import { Directive, forwardRef } from '@angular/core';\nimport { AbstractObject3D } from '../abstract-object-3d';\nimport { AbstractModelLoader } from './abstract-model-loader';\nimport * as THREE from 'three-full';\n\n@Directive({\n  selector: 'three-object-loader',\n  providers: [{ provide: AbstractObject3D, useExisting: forwardRef(() => ObjectLoaderDirective) }]\n})\nexport class ObjectLoaderDirective extends AbstractModelLoader {\n  private loader = new THREE.ObjectLoader();\n\n  protected async loadModelObject() {\n    return new Promise<THREE.Object3D>((resolve, reject) => {\n      this.loader.load(this.model, model => {\n          resolve(model);\n        },\n        undefined,\n        reject\n      );\n    });\n  }\n}\n","import { Directive, Input, AfterViewInit, forwardRef } from '@angular/core';\nimport * as THREE from 'three-full';\nimport { AbstractObject3D } from '../abstract-object-3d';\n\n@Directive({\n  selector: 'three-point-light',\n  providers: [{ provide: AbstractObject3D, useExisting: forwardRef(() => PointLightDirective) }]\n})\nexport class PointLightDirective extends AbstractObject3D<THREE.PointLight> {\n\n  @Input() color: THREE.Color;\n  @Input() intensity: number;\n  @Input() distance: number;\n\n  constructor() {\n    super();\n    console.log('PointLightDirective.constructor');\n  }\n\n  protected newObject3DInstance(): THREE.PointLight {\n    console.log('PointLightDirective.newObject3DInstance');\n    return new THREE.PointLight(this.color, this.intensity, this.distance);\n  }\n\n  protected afterInit(): void {\n    console.log('PointLightDirective.afterInit');\n    // none\n  }\n\n}\n","import { Component, AfterViewInit, ViewChild, Input, ElementRef, HostListener } from '@angular/core';\nimport * as THREE from 'three';\nimport { OrbitControls } from '@avatsaev/three-orbitcontrols-ts';\n// import { CameraControls } from 'camera-controls';\n\n@Component({\n  selector: 'three-test',\n  templateUrl: './three-test.component.html',\n  styleUrls: ['./three-test.component.css']\n})\nexport class ThreeTestComponent implements AfterViewInit {\n  @ViewChild('canvas') canvasRef: ElementRef;\n\n  scene = null;\n  camera = null;\n  renderer = null;\n  controls = null;\n  mesh = null;\n  light = null;\n  count = 1;\n\n  @HostListener('window:resize', ['$event'])\n  onResize(event){\n   this.resizeCanvasToDisplaySize(true);\n  }\n\n  private get canvas(): HTMLCanvasElement {\n    return this.canvasRef.nativeElement;\n  }\n\n  constructor(private elem: ElementRef) {\n    this.scene = new THREE.Scene();\n    this.camera = new THREE.PerspectiveCamera(45, 1, 1, 1000);\n  }\n\n  ngAfterViewInit() {\n    this.configScene();\n    this.configCamera();\n    this.configRenderer();\n    this.configControls();\n\n    this.createLight();\n    this.createMesh();\n\n    this.animate();\n  }\n\n  configScene() {\n    this.scene.background = new THREE.Color( 0xdddddd );\n  }\n\n  private calculateAspectRatio(): number {\n    // console.log('canvas.clientWidth: ', this.canvas.clientWidth);\n//    console.log('canvas.clientHeight: ', this.canvas.clientHeight);\n    const height = this.canvas.clientHeight;\n    if (height === 0) {\n      return 0;\n    }\n    return this.canvas.clientWidth / this.canvas.clientHeight;\n  }\n\n  updateCamera(): void {\n    this.camera.aspect = this.calculateAspectRatio();\n    this.camera.updateProjectionMatrix();\n  }\n\n  configCamera() {\n    this.updateCamera();\n    this.camera.position.set( -15, 10, 15 );\n    this.camera.lookAt( this.scene.position );\n  }\n\n  resizeCanvasToDisplaySize(force): void {\n    // See: https://stackoverflow.com/questions/29884485/threejs-canvas-size-based-on-container\n    const width = this.canvas.clientWidth;\n    const height = this.canvas.clientHeight;\n    if (force || this.canvas.width !== width || this.canvas.height !== height) {\n      // you must pass false here or three.js sadly fights the browser\n      this.renderer.setSize(width, height, false);\n      this.camera.aspect = width / height;\n      this.camera.updateProjectionMatrix();\n    }\n  }\n\n  configRenderer() {\n    this.renderer = new THREE.WebGLRenderer({\n      canvas: this.canvas,\n      antialias: true,\n      alpha: true\n    });\n    this.renderer.setPixelRatio(1);\n     // Using setPixelRatio(devicePixelRatio) for HD-DPI can cause excessive rendering.\n     // See: https://webglfundamentals.org/webgl/lessons/webgl-resizing-the-canvas.html\n    this.renderer.setClearColor( 0x000000, 0 );\n/*    const widgetPadding = 4;\n    console.log('canvas.width', this.canvas.width);\n    console.log('canvas.clientWidth', this.canvas.clientWidth);\n    console.log('canvas.offsetWidth', this.canvas.offsetWidth);\n    console.log('canvas.scrollWidth', this.canvas.scrollWidth);\n    const style = getComputedStyle(this.elem.nativeElement);\n    console.log('elem computed', style.width);\n    // const rect = this.canvas.getBoundingClientRect();\n    // console.log('rect', rect);\n    const rect = this.elem.nativeElement.getBoundingClientRect();\n    console.log('elem rect', rect.width);\n\n    const width = this.canvas.clientWidth - (widgetPadding * 2);\n    const height = this.canvas.clientHeight; // resizable layout \"col\" flex adjusts height to fit\n    // this.renderer.setSize(width, height);\n*/\n    this.resizeCanvasToDisplaySize(true);\n    // this.updateChildCamerasAspectRatio();\n  }\n\n  configControls() {\n    this.controls = new OrbitControls(this.camera, this.canvas);\n    this.controls.autoRotate = false;\n    this.controls.enableZoom = true;\n    this.controls.enablePan  = true;\n    this.controls.update();\n  }\n\n  createLight() {\n    this.light = new THREE.PointLight( 0xffffff );\n    this.light.position.set( -10, 10, 10 );\n    this.scene.add( this.light );\n  }\n\n  createMesh() {\n    const geometry = new THREE.BoxGeometry(5, 5, 5);\n    const material = new THREE.MeshLambertMaterial({ color: 0xff0000 });\n    this.mesh = new THREE.Mesh(geometry, material);\n    this.scene.add(this.mesh);\n  }\n\n  animate() {\n    window.requestAnimationFrame(() => this.animate());\n    // this.mesh.rotation.x += 0.01;\n    // this.mesh.rotation.y += 0.01;\n    // if (this.count < 6) {\n    // const rect = this.canvas.getBoundingClientRect();\n    // console.log('rect', rect.width);\n    // this.count++;\n    // }\n    this.controls.update();\n    this.renderer.render(this.scene, this.camera);\n    this.updateCamera();\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { OrbitControlsDirective } from './controls/orbit-controls.directive';\nimport { ColladaLoaderDirective } from './objects/loaders/collada-loader.directive';\nimport { ObjLoaderDirective } from './objects/loaders/obj-loader.directive';\nimport { Rad2DegPipe } from './pipes/rad2deg.pipe';\nimport { Deg2RadPipe } from './pipes/deg2rad.pipe';\nimport { PerspectiveCameraDirective } from './cameras/perspective-camera.directive';\nimport { WebGLRendererComponent } from './renderer/webgl-renderer.component';\nimport { SceneDirective } from './objects/scene.directive';\nimport { AxesHelperDirective } from './objects/helpers/axes-helper.directive';\nimport { GridHelperDirective } from './objects/helpers/grid-helper.directive';\nimport { ObjectLoaderDirective } from './objects/loaders/object-loader.directive';\nimport { PointLightDirective } from './objects/light/point-light.directive';\nimport { ThreeTestComponent } from './three-test/three-test.component';\n\n// TODO: Ideally move all to three-wrapper library. But can't move js/EnableThreeExamples.js to library :(\n@NgModule({\n  imports: [CommonModule],\n  declarations: [\n    OrbitControlsDirective,\n    ColladaLoaderDirective,\n    ObjLoaderDirective,\n    Rad2DegPipe,\n    Deg2RadPipe,\n    PerspectiveCameraDirective,\n    WebGLRendererComponent,\n    SceneDirective,\n    AxesHelperDirective,\n    GridHelperDirective,\n    ObjectLoaderDirective,\n    PointLightDirective,\n    ThreeTestComponent\n  ],\n  exports: [\n    OrbitControlsDirective,\n    ColladaLoaderDirective,\n    ObjLoaderDirective,\n    Rad2DegPipe,\n    Deg2RadPipe,\n    PerspectiveCameraDirective,\n    WebGLRendererComponent,\n    SceneDirective,\n    AxesHelperDirective,\n    GridHelperDirective,\n    ObjectLoaderDirective,\n    PointLightDirective,\n    ThreeTestComponent\n  ],\n  providers: [],\n  entryComponents: [\n    WebGLRendererComponent\n  ]\n})\nexport class ThreeLibModule { }\n"],"names":["THREE.Scene","THREE.WebGLRenderer","THREE.PCFSoftShadowMap","THREE.Object3D","THREE.ColladaLoader","THREE.OBJLoader","THREE.MTLLoader","THREE.PerspectiveCamera","THREE.AxesHelper","THREE.GridHelper","THREE.ObjectLoader","THREE.PointLight","THREE.Color","THREE.BoxGeometry","THREE.MeshLambertMaterial","THREE.Mesh"],"mappings":"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"}
