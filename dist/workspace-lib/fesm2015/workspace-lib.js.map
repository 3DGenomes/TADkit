{"version":3,"file":"workspace-lib.js.map","sources":["ng://workspace-lib/lib/widget-spawner/widget.ts","ng://workspace-lib/lib/workspace-lib.service.ts","ng://workspace-lib/lib/workspace/workspace.ts","ng://workspace-lib/lib/layouts/cols/workspace.component.ts","ng://workspace-lib/lib/workspace/workspace.component.ts","ng://workspace-lib/lib/config/workspace-config.component.ts","ng://workspace-lib/lib/widget-spawner/widget-spawner.component.ts","ng://workspace-lib/lib/layouts/fixed/workspace.component.ts","ng://workspace-lib/lib/layouts/rows/workspace.component.ts","ng://workspace-lib/lib/layouts/gridster/workspace.component.ts","ng://workspace-lib/lib/workspace-lib.module.ts"],"sourcesContent":["import { Type } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nexport class Widget {\n  constructor(\n    public component: Type<any>,\n    public dataStream: Observable<any>\n  ) {}\n}\n","import { Injectable, InjectionToken } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable, BehaviorSubject } from 'rxjs';\nimport { LocalStorageService } from 'ngx-store';\nimport { Layout } from './layouts/layout';\nimport { Widget } from './widget-spawner/widget';\n\nimport * as genomicsWidgets from 'genomics-lib';\n\n@Injectable({\n  providedIn: 'root',\n})\n\nexport class WorkspaceService {\n  private widgetsStreamUrl: string;\n  private widgetsStream: BehaviorSubject<Widget[]>;\n  public widgets: Observable<Widget[]>;\n\n  constructor(\n    private httpClient: HttpClient,\n    private localStorageService: LocalStorageService,\n  ) {\n    this.widgetsStreamUrl = 'assets/defaults/tk-default-workspace.json';\n    this.widgetsStream = new BehaviorSubject<Widget[]>([]);\n    this.widgets = this.widgetsStream.asObservable();\n  }\n\n  private updateWidgets(widgetsArray) {\n    this.widgetsStream.next(widgetsArray);\n    // this.localStorageService.set('workspace', widgetsArray);\n  }\n\n  public loadWidgets(): void {\n    // const widgetsStored = this.localStorageService.get('workspace');\n    // if (!widgetsStored) {\n    //   this.httpClient.get<Widget[]>(this.widgetsStreamUrl)\n    //   .subscribe(widgetArray => {\n    //     this.updateWidgets(widgetArray);\n    //   });\n    // } else {\n      let widgets = [];\n      const data = {title: 'title', state: false};\n      this.widgets.subscribe(wdgt => widgets = wdgt);\n      if (!Array.isArray(widgets) || !widgets.length) {\n        // Default Widgets\n        this.addWidgets(\n          'GenomicsThreejsComponent',\n          'GenomicsMatrixComponent',\n          'GenomicsInfoComponent',\n          'GenomicsTracksComponent'\n        );\n      }\n      // }\n  }\n\n  public addWidgets(...widgetNamesArray: string[]): void {\n    const widgetsArray = [ ...this.widgetsStream.getValue() ];\n    widgetNamesArray.forEach(widgetName => {\n      const widgetComponent = genomicsWidgets[widgetName];\n          // if (!widgetName) {}; // USE DEFAULT???\n      const newWidget = new Widget(widgetComponent, null);\n      widgetsArray.push(newWidget);\n    });\n    this.updateWidgets(widgetsArray);\n  }\n\n  public removeWidget(widgetName: string): void {\n    this.widgets.subscribe(wdgt => console.log(wdgt));\n    // const widgetsArray = this.widgetsStream.getValue().filter(item => item.data.title !== widgetName);\n    // this.updateWidgets(widgetsArray);\n  }\n\n}\n","import { Type } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nexport class Workspace {\n  constructor(\n    public component: Type<any>,\n    public dataStream: Observable<any>\n  ) {}\n}\n","import { Component, HostBinding, Input, OnInit } from '@angular/core';\nimport { WorkspaceService } from '../../workspace-lib.service';\nimport { WidgetComponent } from '../../widget-spawner/widget.component';\n\n@Component({\n  selector: 'workspace-layout',\n  templateUrl: './workspace.component.html',\n  styleUrls: ['./workspace.component.scss']\n})\n\nexport class WorkspaceColsComponent implements OnInit {\n  @HostBinding('class') classes = 'content cols';\n  @Input() dataStream: any;\n\n  public widgets: WidgetComponent[] = [];\n\n  constructor(\n    private workspaceService: WorkspaceService,\n  ) {\n    this.workspaceService.widgets.subscribe(wgts => this.widgets = wgts);\n  }\n\n  public ngOnInit() {\n    this.initializeWorkspace();\n  }\n\n  private initializeWorkspace(): void {\n    this.workspaceService.loadWidgets();\n  }\n\n  public addWidget(widgetName): void {\n    this.workspaceService.addWidgets(widgetName);\n  }\n}\n","import { Component, OnInit, Input, ViewChild, ViewContainerRef,  ComponentFactoryResolver } from '@angular/core';\nimport { Workspace } from './workspace';\nimport { BindObservable } from 'bind-observable';\nimport { Project } from 'projects-lib';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { ProjectsLibService } from 'projects-lib';\n// import * as workspaceLayouts from 'workspaces-lib';\nimport { WorkspaceFixedComponent } from '../layouts/fixed/workspace.component';\nimport { WorkspaceRowsComponent } from '../layouts/rows/workspace.component';\nimport { WorkspaceColsComponent } from '../layouts/cols/workspace.component';\nimport { WorkspaceGridsterComponent } from '../layouts/gridster/workspace.component';\n\n@Component({\n  selector: 'workspace-layout',\n  templateUrl: './workspace.component.html',\n  styleUrls: ['./workspace.component.scss']\n})\nexport class WorkspaceComponent implements OnInit {\n  @ViewChild('workspace', {read: ViewContainerRef}) routespace;\n\n  // private workspacesStream: BehaviorSubject<Workspace[]>;\n  // public workspaces: Observable<Workspace[]>;\n  public currentWorkspace: Workspace;\n\n  @BindObservable('dataStream') private data: Project;\n  public dataStream: Observable<Project>;\n\n  constructor(\n    private componentFactoryResolver: ComponentFactoryResolver,\n    private projectsService: ProjectsLibService\n  ) {\n    // this.workspacesStream = new BehaviorSubject<Workspace[]>([]);\n    // this.workspaces = this.workspacesStream.asObservable();\n    this.projectsService.currentProject.subscribe(prj => this.data = prj);\n  }\n\n  ngOnInit() {\n    this.loadWorkpace();\n  }\n\n  public setWorkspace(workspaceName?: string): void {\n    // const workspaceComponent = workspaceLayouts[workspaceName];\n    // if (!workspaceName) {}; // USE DEFAULT???\n    this.currentWorkspace = new Workspace(WorkspaceColsComponent, null);\n  }\n\n  loadWorkpace() {\n    this.setWorkspace();\n    const componentFactory = this.componentFactoryResolver.resolveComponentFactory(this.currentWorkspace.component);\n    this.routespace.clear();\n    const componentRef = this.routespace.createComponent(componentFactory);\n    (componentRef.instance).dataStream = this.dataStream;\n  }\n\n}\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { SelectItem } from 'primeng/api';\n\nimport { WorkspaceService } from '../workspace-lib.service';\n// import { Layout } from '../layouts/layout';\n\n@Component({\n  selector: 'workspace-config',\n  templateUrl: './workspace-config.component.html',\n  styleUrls: ['./workspace-config.component.css'],\n})\nexport class WorkspaceConfigComponent implements OnInit {\n  public layouts: SelectItem[];\n  public layout = 'fixed';\n\n  constructor(private workspaceService: WorkspaceService) {\n    this.layouts = [\n      { label: 'Fixed', value: 'fixed'},\n      { label: 'Rows', value: 'rows'},\n      { label: 'Columns', value: 'cols'},\n      { label: 'Gridster', value: 'gridster'}\n    ];\n  }\n\n  ngOnInit() {\n    // this.form = new FormGroup({\n    //   title: new FormControl()\n    // });\n  }\n\n  public onChange() {\n    // this.workspaceService.layouts.subscribe(lyts => this.layouts = lyts);\n    console.log(this.layout);\n  }\n\n}\n","import { Component, Input, OnInit, ViewChild, ComponentFactoryResolver, ViewContainerRef } from '@angular/core';\n\nimport { Widget } from '../widget-spawner/widget';\nimport { WidgetComponent } from '../widget-spawner/widget.component';\n\n/**\n * Supported comment MIKE\n */\n@Component({\n  selector: 'workspace-widget',\n  templateUrl: './widget-spawner.component.html',\n  styleUrls: ['./widget-spawner.component.scss']\n})\n\nexport class WidgetSpawnerComponent implements OnInit {\n  @Input() widget: Widget;\n  @Input() dataStream: any;\n  @ViewChild('widget', {read: ViewContainerRef}) workspace;\n\n  constructor(private componentFactoryResolver: ComponentFactoryResolver) {}\n\n  ngOnInit() {\n    this.loadWidget();\n  }\n\n  loadWidget() {\n    const componentFactory = this.componentFactoryResolver.resolveComponentFactory(this.widget.component);\n    this.workspace.clear();\n    const componentRef = this.workspace.createComponent(componentFactory);\n    (<WidgetComponent>componentRef.instance).dataStream = this.dataStream;\n  }\n\n}\n","import { Component, Input, HostBinding, OnInit } from '@angular/core';\nimport { WorkspaceService } from '../../workspace-lib.service';\nimport { WidgetComponent } from '../../widget-spawner/widget.component';\n\n@Component({\n  selector: 'workspace-layout',\n  templateUrl: './workspace.component.html',\n  styleUrls: ['./workspace.component.scss']\n})\n\nexport class WorkspaceFixedComponent implements OnInit {\n  @HostBinding('class') classes = 'workspace';\n  @Input() dataStream: any;\n\n  public widgets: WidgetComponent[] = [];\n\n  constructor(\n    private workspaceService: WorkspaceService,\n  ) {\n    this.workspaceService.widgets.subscribe(wgts => this.widgets = wgts);\n  }\n\n  public ngOnInit() {\n    this.initializeWorkspace();\n  }\n\n  private initializeWorkspace(): void {\n    this.workspaceService.loadWidgets();\n  }\n\n  public addWidget(widgetName): void {\n    this.workspaceService.addWidgets(widgetName);\n  }\n}\n","import { Component, HostBinding, Input, OnInit } from '@angular/core';\nimport { WorkspaceService } from '../../workspace-lib.service';\nimport { WidgetComponent } from '../../widget-spawner/widget.component';\n\n@Component({\n  selector: 'workspace-layout',\n  templateUrl: './workspace.component.html',\n  styleUrls: ['./workspace.component.scss']\n})\n\nexport class WorkspaceRowsComponent implements OnInit {\n  @HostBinding('class') classes = 'content';\n  @Input() dataStream: any;\n\n  public widgets: WidgetComponent[] = [];\n\n  constructor(\n    private workspaceService: WorkspaceService,\n  ) {\n    this.workspaceService.widgets.subscribe(wgts => this.widgets = wgts);\n  }\n\n  public ngOnInit() {\n    this.initializeWorkspace();\n  }\n\n  private initializeWorkspace(): void {\n    this.workspaceService.loadWidgets();\n  }\n\n  public addWidget(widgetName): void {\n    this.workspaceService.addWidgets(widgetName);\n  }\n}\n","import { Component, HostBinding, Input, HostListener, OnInit } from '@angular/core';\nimport { WorkspaceService } from '../../workspace-lib.service';\nimport { WidgetComponent } from '../../widget-spawner/widget.component';\nimport { GridsterConfig, GridsterItem } from 'angular-gridster2';\n\n@Component({\n  selector: 'workspace-layout',\n  templateUrl: './workspace.component.html',\n  styleUrls: ['./workspace.component.scss']\n})\n\nexport class WorkspaceGridsterComponent implements OnInit {\n  @HostBinding('class') classes = 'workspace';\n  @Input() dataStream: any;\n\n  public widgets: WidgetComponent[] = [];\n  public options: GridsterConfig;\n  public dashboard: GridsterItem[];\n\n  @HostListener('window:resize', ['$event'])\n  onResize(event) {\n    if (this.options.api && this.options.api.resize) {\n      console.log('resizing');\n      this.options.api.resize();\n    }\n  }\n\n  constructor(\n    private workspaceService: WorkspaceService,\n  ) {\n    /* Areas attributes not official Gridster value but to help idenitification */\n    this.dashboard = [\n      {area: 'spatial', cols: 3, rows: 3, x: 0, y: 0},\n      {area: 'matrix',  cols: 9, rows: 3, x: 3, y: 0},\n      {area: 'info',    cols: 3, rows: 3, x: 0, y: 3},\n      {area: 'tracks',  cols: 9, rows: 3, x: 3, y: 3}\n    ];\n\n    this.options = {\n      pushItems: true,\n      minCols: 6,\n      maxCols: 12,\n      minRows: 6,\n      mobileBreakpoint: 768,\n      gridType: 'fit',\n      resizable: {\n          enabled: true\n      },\n      draggable: {\n          enabled: false\n      },\n      margin: 8\n   };\n\n    this.workspaceService.widgets.subscribe(wgts => this.widgets = wgts);\n  }\n\n  public ngOnInit() {\n    this.initializeWorkspace();\n  }\n\n  private initializeWorkspace(): void {\n    this.workspaceService.loadWidgets();\n  }\n\n  public addWidget(widgetName): void {\n    this.workspaceService.addWidgets(widgetName);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { ProgressSpinnerModule } from 'primeng/progressspinner';\nimport { ButtonModule } from 'primeng/button';\nimport { ConfirmDialogModule } from 'primeng/confirmdialog';\nimport { DropdownModule } from 'primeng/dropdown';\n\nimport { WorkspaceConfigComponent } from './config/workspace-config.component';\nimport { WorkspaceComponent } from './workspace/workspace.component';\nimport { WidgetSpawnerComponent } from './widget-spawner/widget-spawner.component';\n\nimport { WorkspaceFixedComponent } from './layouts/fixed/workspace.component';\n\nimport { NgxResizableModule } from '@3dgenomes/ngx-resizable';\nimport { WorkspaceRowsComponent } from './layouts/rows/workspace.component';\nimport { WorkspaceColsComponent } from './layouts/cols/workspace.component';\n\nimport { GridsterModule } from 'angular-gridster2';\nimport { WorkspaceGridsterComponent } from './layouts/gridster/workspace.component';\n\nimport { GenomicsLibModule } from 'genomics-lib';\nimport { ProjectsLibModule } from 'projects-lib';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ProgressSpinnerModule,\n    ButtonModule,\n    ConfirmDialogModule,\n    DropdownModule,\n    NgxResizableModule,\n    GridsterModule,\n    GenomicsLibModule,\n    ProjectsLibModule\n  ],\n  declarations: [\n    WorkspaceConfigComponent,\n    WidgetSpawnerComponent,\n    WorkspaceComponent,\n    WorkspaceFixedComponent,\n    WorkspaceRowsComponent,\n    WorkspaceColsComponent,\n    WorkspaceGridsterComponent,\n  ],\n  exports: [],\n  providers: [],\n  entryComponents: [\n    WorkspaceFixedComponent,\n    WorkspaceRowsComponent,\n    WorkspaceColsComponent,\n    WorkspaceGridsterComponent\n  ]\n})\nexport class WorkspaceLibModule {}\n"],"names":["tslib_1.__decorate"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAGA;;;;;IACE,YACS,SAAoB,EACpB,UAA2B;QAD3B,cAAS,GAAT,SAAS,CAAW;QACpB,eAAU,GAAV,UAAU,CAAiB;KAChC;CACL;;;;;;ACRD;;;;;IAkBE,YACU,UAAsB,EACtB,mBAAwC;QADxC,eAAU,GAAV,UAAU,CAAY;QACtB,wBAAmB,GAAnB,mBAAmB,CAAqB;QAEhD,IAAI,CAAC,gBAAgB,GAAG,2CAA2C,CAAC;QACpE,IAAI,CAAC,aAAa,GAAG,IAAI,eAAe,CAAW,EAAE,CAAC,CAAC;QACvD,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,aAAa,CAAC,YAAY,EAAE,CAAC;KAClD;;;;;IAEO,aAAa,CAAC,YAAY;QAChC,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;;KAEvC;;;;IAEM,WAAW;;;;;;;;;YAQV,OAAO,GAAG,EAAE;QAEhB,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,IAAI,IAAI,OAAO,GAAG,IAAI,CAAC,CAAC;QAC/C,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE;;YAE9C,IAAI,CAAC,UAAU,CACb,0BAA0B,EAC1B,yBAAyB,EACzB,uBAAuB,EACvB,yBAAyB,CAC1B,CAAC;SACH;;KAEJ;;;;;IAEM,UAAU,CAAC,GAAG,gBAA0B;;cACvC,YAAY,GAAG,CAAE,GAAG,IAAI,CAAC,aAAa,CAAC,QAAQ,EAAE,CAAE;QACzD,gBAAgB,CAAC,OAAO,CAAC,UAAU;;kBAC3B,eAAe,GAAG,eAAe,CAAC,UAAU,CAAC;;;kBAE7C,SAAS,GAAG,IAAI,MAAM,CAAC,eAAe,EAAE,IAAI,CAAC;YACnD,YAAY,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;SAC9B,CAAC,CAAC;QACH,IAAI,CAAC,aAAa,CAAC,YAAY,CAAC,CAAC;KAClC;;;;;IAEM,YAAY,CAAC,UAAkB;QACpC,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,IAAI,IAAI,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;;;KAGnD;;;YA7DF,UAAU,SAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;YAVQ,UAAU;YAEV,mBAAmB;;;;;;;;ACA5B;;;;;IACE,YACS,SAAoB,EACpB,UAA2B;QAD3B,cAAS,GAAT,SAAS,CAAW;QACpB,eAAU,GAAV,UAAU,CAAiB;KAChC;CACL;;;;;;ACRD;;;;IAgBE,YACU,gBAAkC;QAAlC,qBAAgB,GAAhB,gBAAgB,CAAkB;QANtB,YAAO,GAAG,cAAc,CAAC;QAGxC,YAAO,GAAsB,EAAE,CAAC;QAKrC,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,SAAS,CAAC,IAAI,IAAI,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,CAAC;KACtE;;;;IAEM,QAAQ;QACb,IAAI,CAAC,mBAAmB,EAAE,CAAC;KAC5B;;;;IAEO,mBAAmB;QACzB,IAAI,CAAC,gBAAgB,CAAC,WAAW,EAAE,CAAC;KACrC;;;;;IAEM,SAAS,CAAC,UAAU;QACzB,IAAI,CAAC,gBAAgB,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC;KAC9C;;;YA5BF,SAAS,SAAC;gBACT,QAAQ,EAAE,kBAAkB;gBAC5B,0oCAAyC;;aAE1C;;;YAPQ,gBAAgB;;;sBAUtB,WAAW,SAAC,OAAO;yBACnB,KAAK;;;;;;;;;;;;ICeN,YACU,wBAAkD,EAClD,eAAmC;QADnC,6BAAwB,GAAxB,wBAAwB,CAA0B;QAClD,oBAAe,GAAf,eAAe,CAAoB;;;QAI3C,IAAI,CAAC,eAAe,CAAC,cAAc,CAAC,SAAS,CAAC,GAAG,IAAI,IAAI,CAAC,IAAI,GAAG,GAAG,CAAC,CAAC;KACvE;;;;IAED,QAAQ;QACN,IAAI,CAAC,YAAY,EAAE,CAAC;KACrB;;;;;IAEM,YAAY,CAAC,aAAsB;;;QAGxC,IAAI,CAAC,gBAAgB,GAAG,IAAI,SAAS,CAAC,sBAAsB,EAAE,IAAI,CAAC,CAAC;KACrE;;;;IAED,YAAY;QACV,IAAI,CAAC,YAAY,EAAE,CAAC;;cACd,gBAAgB,GAAG,IAAI,CAAC,wBAAwB,CAAC,uBAAuB,CAAC,IAAI,CAAC,gBAAgB,CAAC,SAAS,CAAC;QAC/G,IAAI,CAAC,UAAU,CAAC,KAAK,EAAE,CAAC;;cAClB,YAAY,GAAG,IAAI,CAAC,UAAU,CAAC,eAAe,CAAC,gBAAgB,CAAC;QACtE,CAAC,YAAY,CAAC,QAAQ,EAAE,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC;KACtD;;;YAxCF,SAAS,SAAC;gBACT,QAAQ,EAAE,kBAAkB;gBAC5B,oDAAyC;;aAE1C;;;YAhBgE,wBAAwB;YAKhF,kBAAkB;;;yBAaxB,SAAS,SAAC,WAAW,EAAE,EAAC,IAAI,EAAE,gBAAgB,EAAC;;AAMlBA;IAA7B,cAAc,CAAC,YAAY,CAAC;8BAAe,OAAO;gDAAC;;;;;;ACxBtD;AAWA;;;;IAIE,YAAoB,gBAAkC;QAAlC,qBAAgB,GAAhB,gBAAgB,CAAkB;QAF/C,WAAM,GAAG,OAAO,CAAC;QAGtB,IAAI,CAAC,OAAO,GAAG;YACb,EAAE,KAAK,EAAE,OAAO,EAAE,KAAK,EAAE,OAAO,EAAC;YACjC,EAAE,KAAK,EAAE,MAAM,EAAE,KAAK,EAAE,MAAM,EAAC;YAC/B,EAAE,KAAK,EAAE,SAAS,EAAE,KAAK,EAAE,MAAM,EAAC;YAClC,EAAE,KAAK,EAAE,UAAU,EAAE,KAAK,EAAE,UAAU,EAAC;SACxC,CAAC;KACH;;;;IAED,QAAQ;;;;KAIP;;;;IAEM,QAAQ;;QAEb,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;KAC1B;;;YA3BF,SAAS,SAAC;gBACT,QAAQ,EAAE,kBAAkB;gBAC5B,yLAAgD;;aAEjD;;;YAPQ,gBAAgB;;;;;;;ACHzB;;;AAcA;;;;IAKE,YAAoB,wBAAkD;QAAlD,6BAAwB,GAAxB,wBAAwB,CAA0B;KAAI;;;;IAE1E,QAAQ;QACN,IAAI,CAAC,UAAU,EAAE,CAAC;KACnB;;;;IAED,UAAU;;cACF,gBAAgB,GAAG,IAAI,CAAC,wBAAwB,CAAC,uBAAuB,CAAC,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC;QACrG,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;;cACjB,YAAY,GAAG,IAAI,CAAC,SAAS,CAAC,eAAe,CAAC,gBAAgB,CAAC;QACrE,oBAAkB,YAAY,CAAC,QAAQ,IAAE,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC;KACvE;;;YAtBF,SAAS,SAAC;gBACT,QAAQ,EAAE,kBAAkB;gBAC5B,iDAA8C;;aAE/C;;;YAZ6C,wBAAwB;;;qBAenE,KAAK;yBACL,KAAK;wBACL,SAAS,SAAC,QAAQ,EAAE,EAAC,IAAI,EAAE,gBAAgB,EAAC;;;;;;;ACjB/C;;;;IAgBE,YACU,gBAAkC;QAAlC,qBAAgB,GAAhB,gBAAgB,CAAkB;QANtB,YAAO,GAAG,WAAW,CAAC;QAGrC,YAAO,GAAsB,EAAE,CAAC;QAKrC,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,SAAS,CAAC,IAAI,IAAI,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,CAAC;KACtE;;;;IAEM,QAAQ;QACb,IAAI,CAAC,mBAAmB,EAAE,CAAC;KAC5B;;;;IAEO,mBAAmB;QACzB,IAAI,CAAC,gBAAgB,CAAC,WAAW,EAAE,CAAC;KACrC;;;;;IAEM,SAAS,CAAC,UAAU;QACzB,IAAI,CAAC,gBAAgB,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC;KAC9C;;;YA5BF,SAAS,SAAC;gBACT,QAAQ,EAAE,kBAAkB;gBAC5B,oIAAyC;;aAE1C;;;YAPQ,gBAAgB;;;sBAUtB,WAAW,SAAC,OAAO;yBACnB,KAAK;;;;;;;ACZR;;;;IAgBE,YACU,gBAAkC;QAAlC,qBAAgB,GAAhB,gBAAgB,CAAkB;QANtB,YAAO,GAAG,SAAS,CAAC;QAGnC,YAAO,GAAsB,EAAE,CAAC;QAKrC,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,SAAS,CAAC,IAAI,IAAI,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,CAAC;KACtE;;;;IAEM,QAAQ;QACb,IAAI,CAAC,mBAAmB,EAAE,CAAC;KAC5B;;;;IAEO,mBAAmB;QACzB,IAAI,CAAC,gBAAgB,CAAC,WAAW,EAAE,CAAC;KACrC;;;;;IAEM,SAAS,CAAC,UAAU;QACzB,IAAI,CAAC,gBAAgB,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC;KAC9C;;;YA5BF,SAAS,SAAC;gBACT,QAAQ,EAAE,kBAAkB;gBAC5B,ysCAAyC;;aAE1C;;;YAPQ,gBAAgB;;;sBAUtB,WAAW,SAAC,OAAO;yBACnB,KAAK;;;;;;;ACZR;;;;IA2BE,YACU,gBAAkC;QAAlC,qBAAgB,GAAhB,gBAAgB,CAAkB;QAhBtB,YAAO,GAAG,WAAW,CAAC;QAGrC,YAAO,GAAsB,EAAE,CAAC;;QAgBrC,IAAI,CAAC,SAAS,GAAG;YACf,EAAC,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAC;YAC/C,EAAC,IAAI,EAAE,QAAQ,EAAG,IAAI,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAC;YAC/C,EAAC,IAAI,EAAE,MAAM,EAAK,IAAI,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAC;YAC/C,EAAC,IAAI,EAAE,QAAQ,EAAG,IAAI,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAC;SAChD,CAAC;QAEF,IAAI,CAAC,OAAO,GAAG;YACb,SAAS,EAAE,IAAI;YACf,OAAO,EAAE,CAAC;YACV,OAAO,EAAE,EAAE;YACX,OAAO,EAAE,CAAC;YACV,gBAAgB,EAAE,GAAG;YACrB,QAAQ,EAAE,KAAK;YACf,SAAS,EAAE;gBACP,OAAO,EAAE,IAAI;aAChB;YACD,SAAS,EAAE;gBACP,OAAO,EAAE,KAAK;aACjB;YACD,MAAM,EAAE,CAAC;SACX,CAAC;QAED,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,SAAS,CAAC,IAAI,IAAI,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,CAAC;KACtE;;;;;IAnCD,QAAQ,CAAC,KAAK;QACZ,IAAI,IAAI,CAAC,OAAO,CAAC,GAAG,IAAI,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,MAAM,EAAE;YAC/C,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;YACxB,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,MAAM,EAAE,CAAC;SAC3B;KACF;;;;IAgCM,QAAQ;QACb,IAAI,CAAC,mBAAmB,EAAE,CAAC;KAC5B;;;;IAEO,mBAAmB;QACzB,IAAI,CAAC,gBAAgB,CAAC,WAAW,EAAE,CAAC;KACrC;;;;;IAEM,SAAS,CAAC,UAAU;QACzB,IAAI,CAAC,gBAAgB,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC;KAC9C;;;YA9DF,SAAS,SAAC;gBACT,QAAQ,EAAE,kBAAkB;gBAC5B,sQAAyC;;aAE1C;;;YARQ,gBAAgB;;;sBAWtB,WAAW,SAAC,OAAO;yBACnB,KAAK;uBAML,YAAY,SAAC,eAAe,EAAE,CAAC,QAAQ,CAAC;;;;;;;ACnB3C;;;YAyBC,QAAQ,SAAC;gBACR,OAAO,EAAE;oBACP,YAAY;oBACZ,WAAW;oBACX,qBAAqB;oBACrB,YAAY;oBACZ,mBAAmB;oBACnB,cAAc;oBACd,kBAAkB;oBAClB,cAAc;oBACd,iBAAiB;oBACjB,iBAAiB;iBAClB;gBACD,YAAY,EAAE;oBACZ,wBAAwB;oBACxB,sBAAsB;oBACtB,kBAAkB;oBAClB,uBAAuB;oBACvB,sBAAsB;oBACtB,sBAAsB;oBACtB,0BAA0B;iBAC3B;gBACD,OAAO,EAAE,EAAE;gBACX,SAAS,EAAE,EAAE;gBACb,eAAe,EAAE;oBACf,uBAAuB;oBACvB,sBAAsB;oBACtB,sBAAsB;oBACtB,0BAA0B;iBAC3B;aACF;;;;;;;;;;;;;;;"}
