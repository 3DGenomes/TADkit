!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?e(exports,require("@angular/core"),require("@angular/common/http"),require("ngx-store"),require("rxjs"),require("rxjs/operators"),require("@angular/forms"),require("primeng/api"),require("@angular/common"),require("primeng/progressspinner"),require("primeng/button"),require("primeng/radiobutton"),require("primeng/checkbox"),require("primeng/confirmdialog")):"function"==typeof define&&define.amd?define("projects-lib",["exports","@angular/core","@angular/common/http","ngx-store","rxjs","rxjs/operators","@angular/forms","primeng/api","@angular/common","primeng/progressspinner","primeng/button","primeng/radiobutton","primeng/checkbox","primeng/confirmdialog"],e):e(t["projects-lib"]={},t.ng.core,t.ng.common.http,t.WebStorageModule,t.rxjs,t.rxjs.operators,t.ng.forms,t.ConfirmationService,t.ng.common,t.ProgressSpinnerModule,t.ButtonModule,t.RadioButtonModule,t.CheckboxModule,t.ConfirmDialogModule)}(this,function(t,e,r,o,n,i,c,s,p,a,u,l,d,j){"use strict";var f=function(){function t(t){this.httpClient=t,this.defaultUser="assets/defaults/tk-default-user.json"}return t.prototype.loadDefaultUser=function(){return console.log("Loading default user..."),this.currentUser=this.httpClient.get(this.defaultUser)},t.prototype.getCurrentUser=function(){return this.currentUser},t.decorators=[{type:e.Injectable,args:[{providedIn:"root"}]}],t.ctorParameters=function(){return[{type:r.HttpClient}]},t.ngInjectableDef=e.defineInjectable({factory:function(){return new t(e.inject(r.HttpClient))},token:t,providedIn:"root"}),t}(),g=function(t,e){return(g=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var r in e)e.hasOwnProperty(r)&&(t[r]=e[r])})(t,e)};function m(t,e){var r="function"==typeof Symbol&&t[Symbol.iterator];if(!r)return t;var o,n,i=r.call(t),c=[];try{for(;(void 0===e||0<e--)&&!(o=i.next()).done;)c.push(o.value)}catch(s){n={error:s}}finally{try{o&&!o.done&&(r=i["return"])&&r.call(i)}finally{if(n)throw n.error}}return c}function h(){for(var t=[],e=0;e<arguments.length;e++)t=t.concat(m(arguments[e]));return t}var y=function(){function t(t,e){this.httpClient=t,this.localStorageService=e,this.projectsStreamUrl="assets/defaults/tk-default-projects.json",this.projectsStream=new n.BehaviorSubject(null),this.projects=this.projectsStream.asObservable(),this.currentProjectStream=new n.BehaviorSubject(null)}return Object.defineProperty(t.prototype,"currentProject",{get:function(){return this.currentProjectStream.asObservable()},enumerable:!0,configurable:!0}),t.prototype.updateProjects=function(t){this.projectsStream.next(t),this.localStorageService.set("projects",t),this.setProject()},t.prototype.loadProjects=function(){var e=this,t=this.localStorageService.get("projects");t?this.updateProjects(t):this.httpClient.get(this.projectsStreamUrl).subscribe(function(t){e.updateProjects(t)})},t.prototype.setProject=function(e){var t=null;t=e?this.projects.pipe(i.map(function(t){return t.find(function(t){return t.title===e.title})})):this.projects.pipe(i.take(1),i.map(function(t){return t[0]})),this.currentProjectStream.next(t)},t.prototype.getProject=function(t){return this.currentProject},t.prototype.addProject=function(t){var e=h(this.projectsStream.getValue(),[t]);this.updateProjects(e)},t.prototype.editProject=function(t){var e=h(this.projectsStream.getValue(),[t]);this.updateProjects(e)},t.prototype.deleteProject=function(e){var t=this.projectsStream.getValue().filter(function(t){return t.title!==e.title});this.updateProjects(t)},t.decorators=[{type:e.Injectable,args:[{providedIn:"root"}]}],t.ctorParameters=function(){return[{type:r.HttpClient},{type:o.LocalStorageService}]},t.ngInjectableDef=e.defineInjectable({factory:function(){return new t(e.inject(r.HttpClient),e.inject(o.LocalStorageService))},token:t,providedIn:"root"}),t}(),b=function k(){},P=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return function o(t,e){function r(){this.constructor=t}g(t,e),t.prototype=null===e?Object.create(e):(r.prototype=e.prototype,new r)}(e,t),e}(Array),v=function(){function t(){this.classes="projects"}return t.decorators=[{type:e.Component,args:[{selector:"projects-admin",template:"<h2>Projects</h2>\n  <projects-list></projects-list>\n  <projects-details></projects-details>\n  <projects-create></projects-create>\n"}]}],t.propDecorators={classes:[{type:e.HostBinding,args:["class"]}]},t}(),S=function(){function t(t){this.projectsService=t}return t.prototype.ngOnInit=function(){this.getProject()},t.prototype.getProject=function(){var e=this;this.projectsService.currentProject.subscribe(function(t){return e.project=t})},t.decorators=[{type:e.Component,args:[{selector:"projects-brief",template:'<section class="tk-list">\n  <h3>\n    Project: \n    <ng-container *ngIf="(project | async) as project; else loading">{{project.title}}</ng-container>\n  </h3>\n  <div *ngIf="(project | async) as project; else loading">\n    <table>\n      <tr><td>Title</td><td>{{project.title}}</td></tr>\n      <tr><td>Description</td><td>{{project.description}}</td></tr>\n      <tr><td>State</td><td>{{project.state}}</td></tr>\n    </table>\n    <ng-template #noItems>No Items!</ng-template>\n  </div>\n  <ng-template #loading>\n    <p-progressSpinner></p-progressSpinner>\n  </ng-template> \n</section>\n<ng-template #loading>Loading ...<p-progressSpinner></p-progressSpinner></ng-template>'}]}],t.ctorParameters=function(){return[{type:y}]},t}(),C=function(){function t(t){this.projectsService=t}return t.prototype.ngOnInit=function(){this.createFormControls(),this.createForm()},t.prototype.createFormControls=function(){this.title=new c.FormControl(""),this.description=new c.FormControl("")},t.prototype.createForm=function(){this.projectForm=new c.FormGroup({title:this.title,description:this.description})},t.prototype.addProject=function(){var t=Object.assign({},this.projectForm.value);this.projectsService.addProject(t)},t.decorators=[{type:e.Component,args:[{selector:"projects-create",template:'<section class="tk-form">\n  <h3>Create New Project:</h3>\n  <form novalidate [formGroup]="projectForm" (ngSubmit)="addProject()" class="ui-inputgroup">\n    <span class="ui-inputgroup-addon"><i class="pi pi-user"></i></span>\n    <label>Project Title:</label>\n    <input type="text" formControlName="title">\n    <span class="ui-inputgroup-addon"><i class="pi pi-user"></i></span>\n    <label>Description:</label>\n    <input type="text" formControlName="description">\n    <button pButton type="submit" icon="pi pi-check" iconPos="left" label="Submit"></button>\n  </form>\n</section>'}]}],t.ctorParameters=function(){return[{type:y}]},t}(),x=function(){function t(t){this.projectsService=t}return t.prototype.ngOnInit=function(){this.getProject()},t.prototype.getProject=function(){var e=this;this.projectsService.currentProject.subscribe(function(t){return e.project=t})},t.decorators=[{type:e.Component,args:[{selector:"projects-details",template:'<section class="tk-list">\n  <h3>\n    Project: \n    <ng-container *ngIf="(project | async) as project; else loading">{{project.title}}</ng-container>\n  </h3>\n  <div *ngIf="(project | async) as project; else loading">\n    <table>\n      <tr><td>Title</td><td>{{project.title}}</td></tr>\n      <tr><td>Description</td><td>{{project.description}}</td></tr>\n      <tr><td>State</td><td>{{project.state}}</td></tr>\n    </table>\n    <ng-template #noItems>No Items!</ng-template>\n  </div>\n</section>\n<ng-template #loading>Loading ...<p-progressSpinner></p-progressSpinner></ng-template>'}]}],t.ctorParameters=function(){return[{type:y}]},t}(),I=function(){function t(t,e){this.projectsService=t,this.confirmationService=e}return t.prototype.ngOnInit=function(){this.getProjects()},t.prototype.getProjects=function(){var e=this;this.projectsService.projects.subscribe(function(t){return e.projects=t}),this.projectsService.currentProject.subscribe(function(t){e.currentProject=t})},t.prototype.setProject=function(t){this.projectsService.setProject(t)},t.prototype.editProject=function(t){},t.prototype.deleteProject=function(t){var e=this;this.confirmationService.confirm({message:"Are you sure that you want to delete this project",accept:function(){e.projectsService.deleteProject(t)}})},t.decorators=[{type:e.Component,args:[{selector:"projects-list",template:'<section class="tk-list">\n  <h3>Projects List</h3>\n  <div *ngIf="projects else loading">\n      \x3c!-- <ng-container *ngIf="projects.length; else noItems"> --\x3e\n      <table>\n        <tr>\n          <th>Title</th>\n          <th>Description</th>\n          <th>Date</th>\n          <th>Select</th>\n          <th>Edit</th>\n          <th>Delete</th>\n        </tr>\n        <tr *ngFor="let project of projects">\n          <td>{{project.title}}</td>\n          <td>{{project.description}}</td>\n          <td>{{project.date}}</td>\n          \x3c!-- <td><p-radioButton (click)="setProject(project)" name="selectProject" value="{{project.title}}" [(ngModel)]="currentCheck"></p-radioButton></td> --\x3e\n          <td><button (click)="setProject(project)" pButton type="button" icon="pi pi-check" iconPos="left" [ngClass]="{\'ui-state-active\': project.title === (currentProject | async)?.title }"></button></td>\n          <td><button pButton type="button" icon="pi pi-pencil" iconPos="left"></button></td>\n          <td><button (click)="deleteProject(project)" pButton type="button" icon="pi pi-trash" iconPos="left"></button></td>\n        </tr>\n      </table>\n      \x3c!-- </ng-container>     --\x3e\n      <ng-template #noItems>No Items!</ng-template>\n    </div>\n    <ng-template #loading>\n      <p-progressSpinner></p-progressSpinner>\n    </ng-template> \n</section>\n<p-confirmDialog header="Confirmation" icon="pi pi-exclamation-triangle" width="425"></p-confirmDialog>\n',providers:[s.ConfirmationService],styles:[":host ::ng-deep th{text-align:left}"]}]}],t.ctorParameters=function(){return[{type:y},{type:s.ConfirmationService}]},t}(),M=function(){function t(){}return t.decorators=[{type:e.NgModule,args:[{imports:[p.CommonModule,c.FormsModule,c.ReactiveFormsModule,o.WebStorageModule,a.ProgressSpinnerModule,u.ButtonModule,l.RadioButtonModule,d.CheckboxModule,j.ConfirmDialogModule],declarations:[v,I,S,x,C],exports:[v,I,S,x,C,c.FormsModule,c.ReactiveFormsModule],providers:[]}]}],t}();t.UsersAdminService=f,t.ProjectsLibService=y,t.Project=b,t.Projects=P,t.ProjectsAdminComponent=v,t.ProjectsBriefComponent=S,t.ProjectsCreateComponent=C,t.ProjectsDetailsComponent=x,t.ProjectsListComponent=I,t.ProjectsLibModule=M,Object.defineProperty(t,"__esModule",{value:!0})});
//# sourceMappingURL=projects-lib.umd.min.js.map