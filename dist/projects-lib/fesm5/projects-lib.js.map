{"version":3,"file":"projects-lib.js.map","sources":["ng://projects-lib/lib/users-admin.service.ts","ng://projects-lib/lib/projects-lib.service.ts","ng://projects-lib/lib/models/project.model.ts","ng://projects-lib/lib/components/projects-admin/projects-admin.component.ts","ng://projects-lib/lib/components/projects-brief/projects-brief.component.ts","ng://projects-lib/lib/components/projects-create/projects-create.component.ts","ng://projects-lib/lib/components/projects-details/projects-details.component.ts","ng://projects-lib/lib/components/projects-list/projects-list.component.ts","ng://projects-lib/lib/projects-lib.module.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { User, Users } from './models/user.model';\n\n@Injectable({\n  providedIn: 'root',\n})\n\nexport class UsersAdminService {\n    defaultUser: string;\n//   private users: Users;\n  public currentUser: Observable<User>;\n//   public currentUserIndex = 0;\n\n  constructor(private httpClient: HttpClient) {\n    this.defaultUser = 'assets/defaults/tk-default-user.json';\n  }\n\n//   private setUserProject(userIndex) {\n//     this.currentUserIndex = userIndex;\n//     this.currentUser = this.users[this.currentUserIndex];\n//     this.currentUser.subscribe(usr => console.log('Set current user: ', usr.fullname));\n//   }\n\n  public loadDefaultUser(): Observable<User> {\n    console.log('Loading default user...');\n    return this.currentUser = this.httpClient.get<User>(this.defaultUser);\n  }\n\n  public getCurrentUser(): Observable<User>  {\n    // this.currentUser.subscribe(usr => console.log('Returning current user: ', usr.title));\n    return this.currentUser;\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { LocalStorageService } from 'ngx-store';\n\nimport { Observable, BehaviorSubject } from 'rxjs';\nimport { map, take } from 'rxjs/operators';\nimport { Project, Projects } from './models/project.model';\n\n@Injectable({\n  providedIn: 'root',\n})\n\nexport class ProjectsLibService {\n  // User projects stream\n  private projectsStreamUrl: string;\n  private projectsStream: BehaviorSubject<Projects>;\n  public projects: Observable<Projects>;\n  // Current project stream\n  private currentProjectStream: BehaviorSubject<Project>;\n  // public currentProject: Observable<Project>;\n\n  constructor(\n    private httpClient: HttpClient,\n    public localStorageService: LocalStorageService\n    ) {\n    this.projectsStreamUrl = 'assets/defaults/tk-default-projects.json';\n    this.projectsStream = new BehaviorSubject<Projects>(null);\n    this.projects = this.projectsStream.asObservable();\n    this.currentProjectStream = new BehaviorSubject<Project>(null);\n    // this.currentProject = this.currentProjectStream.asObservable();\n  }\n\n  // Same as above?\n  get currentProject(): Observable<Project> {\n    return this.currentProjectStream.asObservable();\n  }\n\n  private updateProjects(projectsArray) {\n    this.projectsStream.next(projectsArray);\n    this.localStorageService.set('projects', projectsArray);\n    this.setProject();\n  }\n\n  public loadProjects(): void {\n    const projectsResource = this.localStorageService.get('projects');\n    if (!projectsResource) {\n      this.httpClient.get<Projects>(this.projectsStreamUrl)\n      .subscribe(projectsArray => {\n        this.updateProjects(projectsArray);\n      });\n    } else {\n      this.updateProjects(projectsResource);\n    }\n  }\n\n  public setProject(project?): void {\n    let theProject = null;\n    if (project) {\n      theProject = this.projects\n      .pipe(\n        map(prjs => prjs\n          .find(prj => prj.title === project.title)\n        )\n      );\n    } else {\n      theProject = this.projects\n      .pipe(\n        take(1),\n        map(prjs => prjs[0])\n      );\n    }\n    // console.log(theProject);\n    this.currentProjectStream.next(theProject);\n  }\n\n  public  getProject(project): Observable<Project> {\n    return this.currentProject;\n  }\n\n  public addProject(project: Project) {\n    const projectsArray = [ ...this.projectsStream.getValue(), project ];\n    this.updateProjects(projectsArray);\n  }\n\n  public editProject(project: Project) {\n    const projectsArray = [ ...this.projectsStream.getValue(), project ];\n    this.updateProjects(projectsArray);\n  }\n\n  public deleteProject(project: Project) {\n    const projectsArray = this.projectsStream.getValue().filter(item => item.title !== project.title);\n    this.updateProjects(projectsArray);\n  }\n\n}\n","/**\n * Project: Class encapsulating all data within a TADkit project.\n */\nimport { Metadata } from './project-metadata.model';\n\n// import { Dataset } from \"./project-dataset.model\"\n// import { Overlay } from \"./project-overlay.model\"\n// import { Storyboard } from \"./project-storyboard.model\"\n// // import { Species } from \"./project-genomics.model\";\n\n// export class Datasets extends Array<Dataset> {}\n// export class Overlays extends Array<Overlay> {}\n// export class Storyboards extends Array<Storyboard> {}\n\nexport class Project {\n  metadata: Metadata;\n  uuid: string;\n  ref: string; // for easy reference in UI/URI\n  title: string;\n  description: string;\n  group: string;\n  state: boolean;\n  cellType: string;\n  species: string;\n  assembly: string;\n  // datasets?: Datasets[] | null;\n  // overlays?: Overlays[] | null;\n  // storyboards?: Storyboards[] | null;\n}\n\nexport class Projects extends Array<Project> {}\n\n","import { Component, HostBinding } from '@angular/core';\n\n@Component({\n  selector: 'projects-admin',\n  templateUrl: './projects-admin.component.html',\n})\n\nexport class ProjectsAdminComponent {\n  @HostBinding('class') classes = 'projects';\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ProjectsLibService } from '../../projects-lib.service';\nimport { Project } from '../../models/project.model';\n\n@Component({\n  selector: 'projects-brief',\n  templateUrl: './projects-brief.component.html'\n})\nexport class ProjectsBriefComponent implements OnInit {\n\npublic project;\n\n  constructor(private projectsService: ProjectsLibService) {}\n\n  public ngOnInit() {\n    this.getProject();\n  }\n\n  private getProject() {\n    this.projectsService.currentProject.subscribe(prj => this.project = prj);\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ProjectsLibService } from '../../projects-lib.service';\nimport { FormGroup, FormControl } from '@angular/forms';\n\n@Component({\n  selector: 'projects-create',\n  templateUrl: './projects-create.component.html'\n})\nexport class ProjectsCreateComponent implements OnInit {\n\n  public projectForm: FormGroup;\n  public title: FormControl;\n  public description: FormControl;\n\n  constructor(private projectsService: ProjectsLibService) {}\n\n  public ngOnInit() {\n    this.createFormControls();\n    this.createForm();\n  }\n\n  private createFormControls() {\n    this.title = new FormControl('');\n    this.description = new FormControl('');\n  }\n\n  private createForm() {\n    this.projectForm = new FormGroup({\n      title: this.title,\n      description: this.description,\n    });\n  }\n\n  public addProject(): void {\n    const newProject = Object.assign({}, this.projectForm.value);\n    this.projectsService.addProject(newProject);\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ProjectsLibService } from '../../projects-lib.service';\nimport { Project } from '../../models/project.model';\n\n@Component({\n  selector: 'projects-details',\n  templateUrl: './projects-details.component.html'\n})\nexport class ProjectsDetailsComponent implements OnInit {\n\npublic project;\n\n  constructor(private projectsService: ProjectsLibService) {}\n\n  public ngOnInit() {\n    this.getProject();\n  }\n\n  private getProject() {\n    this.projectsService.currentProject.subscribe(prj => this.project = prj);\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ProjectsLibService } from '../../projects-lib.service';\nimport { Project, Projects } from '../../models/project.model';\n\nimport { ConfirmationService } from 'primeng/api';\n\n@Component({\n  selector: 'projects-list',\n  templateUrl: './projects-list.component.html',\n  styleUrls: ['./projects-list.component.css'],\n  providers: [ConfirmationService]\n})\nexport class ProjectsListComponent implements OnInit {\n\n  public projects: Projects;\n  public currentProject;\n  // public currentCheck: string;\n\n  constructor(\n    private projectsService: ProjectsLibService,\n    private confirmationService: ConfirmationService\n  ) {}\n\n  public ngOnInit(): void {\n    this.getProjects();\n  }\n\n  private getProjects(): void {\n    this.projectsService.projects.subscribe(prjs => this.projects = prjs);\n    this.projectsService.currentProject.subscribe(prj => {\n      this.currentProject = prj;\n    });\n  }\n\n  public  setProject(project): void {\n    this.projectsService.setProject(project);\n  }\n\n  public  editProject(project): void {\n    // Open dialog with Create form\n  }\n\n  public  deleteProject(project): void {\n    this.confirmationService.confirm({\n      message: 'Are you sure that you want to delete this project',\n      accept: () => {\n        this.projectsService.deleteProject(project);\n      }\n    });\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { WebStorageModule } from 'ngx-store';\n\nimport { ProgressSpinnerModule } from 'primeng/progressspinner';\nimport { ButtonModule } from 'primeng/button';\nimport { RadioButtonModule } from 'primeng/radiobutton';\nimport { CheckboxModule } from 'primeng/checkbox';\nimport { ConfirmDialogModule } from 'primeng/confirmdialog';\n\nimport { ProjectsAdminComponent } from './components/projects-admin/projects-admin.component';\nimport { ProjectsListComponent } from './components/projects-list/projects-list.component';\nimport { ProjectsBriefComponent } from './components/projects-brief/projects-brief.component';\nimport { ProjectsDetailsComponent } from './components/projects-details/projects-details.component';\nimport { ProjectsCreateComponent } from './components/projects-create/projects-create.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    WebStorageModule,\n    ProgressSpinnerModule,\n    ButtonModule,\n    RadioButtonModule,\n    CheckboxModule,\n    ConfirmDialogModule\n  ],\n  declarations: [\n    ProjectsAdminComponent,\n    ProjectsListComponent,\n    ProjectsBriefComponent,\n    ProjectsDetailsComponent,\n    ProjectsCreateComponent\n  ],\n  exports: [\n    ProjectsAdminComponent,\n    ProjectsListComponent,\n    ProjectsBriefComponent,\n    ProjectsDetailsComponent,\n    ProjectsCreateComponent,\n    FormsModule,\n    ReactiveFormsModule\n  ],\n  providers: []\n})\nexport class ProjectsLibModule {}\n"],"names":["tslib_1.__extends"],"mappings":"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"}
